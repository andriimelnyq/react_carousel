{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","offset","handleLeftArrowClick","props","itemWidth","step","images","frameSize","infinite","sizeOfHiddenImages","length","setState","Math","min","handleRightArrowClick","max","this","animationDuration","className","style","width","map","image","index","transform","transition","src","alt","type","onClick","disabled","React","Component","App","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.066dce34.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  offset: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    offset: 0,\n  };\n\n  handleLeftArrowClick = () => {\n    const {\n      itemWidth,\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const sizeOfHiddenImages = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      offset: Math.min(state.offset + itemWidth * step, 0),\n    }));\n\n    if (this.state.offset === 0 && infinite) {\n      this.setState({ offset: -sizeOfHiddenImages });\n    }\n  };\n\n  handleRightArrowClick = () => {\n    const {\n      itemWidth,\n      step,\n      images,\n      frameSize,\n      infinite,\n    } = this.props;\n    const sizeOfHiddenImages = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      offset: Math.max(state.offset - itemWidth * step, -sizeOfHiddenImages),\n    }));\n\n    if (this.state.offset === -sizeOfHiddenImages && infinite) {\n      this.setState({ offset: 0 });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      animationDuration,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { offset } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              style={{\n                transform: `translateX(${offset}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n        <div\n          className=\"Carousel__buttons\"\n        >\n          <button\n            type=\"button\"\n            onClick={this.handleLeftArrowClick}\n            disabled={\n              offset === 0 && !infinite\n            }\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.handleRightArrowClick}\n            disabled={\n              offset === -(images.length - frameSize) * itemWidth && !infinite\n            }\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <form className=\"App__form\">\n          <label>\n            <span>Item width:</span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              value={itemWidth}\n              onChange={(event) => (\n                this.setState({ itemWidth: +event.target.value })\n              )}\n            />\n          </label>\n\n          <label>\n            <span>Frame size:</span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              min=\"1\"\n              max={1300 / itemWidth}\n              value={frameSize}\n              onChange={(event) => (\n                this.setState({ frameSize: +event.target.value })\n              )}\n            />\n          </label>\n\n          <label>\n            <span>Step:</span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              value={step}\n              min=\"1\"\n              max={frameSize}\n              onChange={(event) => (\n                this.setState({ step: +event.target.value })\n              )}\n            />\n          </label>\n\n          <label>\n            <span>Animation duration:</span>\n            <input\n              type=\"number\"\n              className=\"App__input\"\n              value={animationDuration}\n              min=\"100\"\n              max=\"3000\"\n              step=\"100\"\n              onChange={(event) => (\n                this.setState({ animationDuration: +event.target.value })\n              )}\n            />\n          </label>\n\n          <label>\n            <span>Infinite:</span>\n            <input\n              type=\"checkbox\"\n              className=\"App__input\"\n              checked={infinite}\n              onChange={() => (\n                this.setState((state) => ({\n                  infinite: !state.infinite,\n                }))\n              )}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}